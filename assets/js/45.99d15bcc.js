(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{431:function(t,s,a){"use strict";a.r(s);var e=a(28),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#描述"}},[t._v("#")]),t._v(" 描述")]),t._v(" "),a("p",[t._v("检测字符串中是否含有与 regexp 相匹配的文本。")]),t._v(" "),a("p",[t._v("如果正则表达式不包含 "),a("code",[t._v("g")]),t._v(" 标志，则 "),a("code",[t._v("match()")]),t._v(" 方法返回值和 "),a("code",[t._v("RegExp.exec()")]),t._v(" 返回值是相同的。")]),t._v(" "),a("p",[t._v("如果正则表达式包含 "),a("code",[t._v("g")]),t._v(" 标志，则返回一个数组，包含所有匹配的字符串，而不是匹配对象（即不会返回 "),a("code",[t._v("input")]),t._v(" 属性和 "),a("code",[t._v("index")]),t._v(" 属性）。")]),t._v(" "),a("h2",{attrs:{id:"参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[t._v("#")]),t._v(" 参数")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("参数")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("regexp")]),t._v(" "),a("td",[t._v("必需。如果传入一个非正则表达式，则会使用 "),a("code",[t._v("new RegExp()")]),t._v(" 将其隐式转换为正则表达式对象")])])])]),t._v(" "),a("h2",{attrs:{id:"返回值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#返回值"}},[t._v("#")]),t._v(" 返回值")]),t._v(" "),a("p",[t._v("见描述")]),t._v(" "),a("h2",{attrs:{id:"示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),a("h3",{attrs:{id:"是否包含-g-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#是否包含-g-的区别"}},[t._v("#")]),t._v(" 是否包含 "),a("code",[t._v("g")]),t._v(" 的区别")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This is a hello world!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("(hello \\S+)")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ["hello world!"]')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" matches "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("(hello \\S+)")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This is a hello world!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("matches"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//   0: "hello world!"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//   1: "hello world!"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   groups: ined")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   index: 10")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//   input: s is a hello world!"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   length: 2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ]")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);